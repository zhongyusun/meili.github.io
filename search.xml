<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>php判断字符串是否包含某字符</title>
      <link href="/2022/10/10/php-pan-duan-zi-fu-chuan-shi-fou-bao-han-mou-zi-fu/"/>
      <url>/2022/10/10/php-pan-duan-zi-fu-chuan-shi-fou-bao-han-mou-zi-fu/</url>
      
        <content type="html"><![CDATA[<p>strpos() 函数判断字符串中是否包含某字符串</p><h2 id="strstr-函数"><a href="#strstr-函数" class="headerlink" title="strstr()函数"></a>strstr()函数</h2><ol><li><code>strstr()</code>函数搜索一个字符串在另一个字符串中的第一次出现。</li><li>该函数返回字符串的其余部分（从匹配点）。如果未找到所搜索的字符串，则返回 <code>false</code>。</li></ol><p>代码如下:</p><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span> <span class="token comment" spellcheck="true">/*如手册上的举例*/</span> <span class="token variable">$email</span> <span class="token operator">=</span> <span class="token string">'user@example.com'</span><span class="token punctuation">;</span> <span class="token variable">$domain</span> <span class="token operator">=</span> <span class="token function">strstr</span><span class="token punctuation">(</span><span class="token variable">$email</span><span class="token punctuation">,</span> <span class="token string">'@'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">echo</span> <span class="token variable">$domain</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// prints @example.com</span><span class="token delimiter">?></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="stristr-函数"><a href="#stristr-函数" class="headerlink" title="stristr()函数"></a>stristr()函数</h2><ol><li><code>stristr()</code>函数查找字符串在另一个字符串中第一次出现的位置。</li><li>如果成功，则返回字符串的其余部分（从匹配点）。如果没有找到该字符串，则返回 <code>false</code>。</li></ol><p>它和``strstr<code>的使用方法完全一样.唯一的区别是</code>stristr`不区分大小写.</p><h2 id="strpos-函数"><a href="#strpos-函数" class="headerlink" title="strpos()函数"></a>strpos()函数</h2><p><code>strpos</code>函数返回boolean值.``FALSE<code>和</code>TRUE<code>不用多说.用 “===”进行判断.</code>strpos<code>在执行速度上都比以上两个函数快,另外</code>strpos`有一个参数指定判断的位置,但是默认为空.意思是判断整个字符串.缺点是对中文的支持不好.</p><p>实例1</p><pre class="line-numbers language-bash"><code class="language-bash">if<span class="token punctuation">(</span>strpos<span class="token punctuation">(</span><span class="token string">'www.jb51.net'</span>,<span class="token string">'jb51'</span><span class="token punctuation">)</span> <span class="token operator">!=</span><span class="token operator">=</span> false<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">echo</span> <span class="token string">'包含jb51'</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>else<span class="token punctuation">{</span> <span class="token keyword">echo</span> <span class="token string">'不包含jb51'</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>实例2</p><pre class="line-numbers language-php"><code class="language-php"><span class="token variable">$str</span><span class="token operator">=</span> <span class="token string">'abc'</span><span class="token punctuation">;</span><span class="token variable">$needle</span><span class="token operator">=</span> <span class="token string">'a'</span><span class="token punctuation">;</span><span class="token variable">$pos</span> <span class="token operator">=</span> <span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span> <span class="token variable">$needle</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 返回第一次找到改字符串的位置，这里返回为1，若查不到则返回False</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="explode"><a href="#explode" class="headerlink" title="explode"></a>explode</h2><p>用<code>explode</code>进行判断PHP判断字符串的包含代码如下:</p><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">function</span> <span class="token function">checkstr</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token variable">$needle</span> <span class="token operator">=</span><span class="token string">'a'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//判断是否包含a这个字符</span> <span class="token variable">$tmparray</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token variable">$needle</span><span class="token punctuation">,</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$tmparray</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token keyword">else</span><span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="substr"><a href="#substr" class="headerlink" title="substr"></a>substr</h2><p>例如我们需要判断最后一个字符是不是制定字符</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token variable">$str1</span><span class="token operator">=</span><span class="token string">"&lt;p>这是个winrar专用的dll然后下哦啊不错的dll文件，QlogWin32.dll&lt;/p>"</span><span class="token punctuation">;</span>if<span class="token punctuation">(</span>substr<span class="token punctuation">(</span><span class="token variable">$str1</span>,-8<span class="token punctuation">)</span><span class="token operator">==</span><span class="token string">".dll&lt;/p>"</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">echo</span> substr<span class="token punctuation">(</span><span class="token variable">$str1</span>,0,-4<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="substr-count"><a href="#substr-count" class="headerlink" title="substr_count"></a>substr_count</h2><p>统计“子字符串”在“原始字符串中出现的次数”</p><p>substr_count()函数本是一个小字符串在一个大字符串中出现的次数：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token variable">$number</span> <span class="token operator">=</span> substr_count<span class="token punctuation">(</span>big_string, small_string<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>正好今天需要一个查找字符串的函数，要实现判断字符串big_string是否包含字符串small_string，返回true或fasle；</p><p>查了半天手册没有找到现成的函数，于是想到可以用substr_count函数来实现代码如下：</p><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">function</span> <span class="token function">check_str</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span> <span class="token variable">$substr</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token variable">$nums</span><span class="token operator">=</span><span class="token function">substr_count</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span><span class="token variable">$substr</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$nums</span><span class="token operator">>=</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>超级简单！<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> php函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel功能代码块</title>
      <link href="/2022/10/10/laravel-gong-neng-dai-ma-kuai/"/>
      <url>/2022/10/10/laravel-gong-neng-dai-ma-kuai/</url>
      
        <content type="html"><![CDATA[<h2 id="邮箱功能开发（qq邮箱为例）"><a href="#邮箱功能开发（qq邮箱为例）" class="headerlink" title="邮箱功能开发（qq邮箱为例）"></a>邮箱功能开发（qq邮箱为例）</h2><ul><li><p>MustVerifyEmail（强制认证，框架自带）</p><ol><li><p>调整User模型</p><p><em>app/Models/User.php</em></p><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">// 这里加上 MustVerifyEmail</span><span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token keyword">extends</span> <span class="token class-name">Authenticatable</span> <span class="token keyword">implements</span> <span class="token class-name">MustVerifyEmail</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>调整路由</p><p><em>routes/web.php</em></p><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//demo</span><span class="token comment" spellcheck="true">//在注册跳转的页面添加验证邮箱中间件（verified）</span>Route<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token string">'PagesController@root'</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string">'root'</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">middleware</span><span class="token punctuation">(</span><span class="token string">'verified'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 在之前的路由里加上一个 verify 参数（用的自带的登录注册路由）</span>Auth<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">routes</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'verify'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token boolean">true</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>配置env</p><pre class="line-numbers language-php"><code class="language-php"><span class="token constant">MAIL_DRIVER</span><span class="token operator">=</span>smtp<span class="token constant">MAIL_HOST</span><span class="token operator">=</span>smtp<span class="token punctuation">.</span>qq<span class="token punctuation">.</span>com<span class="token constant">MAIL_PORT</span><span class="token operator">=</span><span class="token number">25</span> <span class="token comment" spellcheck="true">//端口号</span><span class="token constant">MAIL_USERNAME</span><span class="token operator">=</span><span class="token number">2460245313</span>@qq<span class="token punctuation">.</span>com<span class="token constant">MAIL_PASSWORD</span><span class="token operator">=</span>qzjkngzxjmrneacc<span class="token constant">MAIL_ENCRYPTION</span><span class="token operator">=</span>tls<span class="token constant">MAIL_FROM_ADDRESS</span><span class="token operator">=</span><span class="token number">2460245313</span>@qq<span class="token punctuation">.</span>com <span class="token shell-comment comment">#发送方</span><span class="token constant">MAIL_FROM_NAME</span><span class="token operator">=</span>孙美丽<span class="token shell-comment comment"># qzjkngzxjmrneacc  qq邮箱授权码</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol></li><li><p>MustVerifyEmailTrait（无强制认证，需要写中间件逻辑）</p><ol><li><p>修改<code>User</code>模型，将 Laravel 自带的邮箱认证功能集成到我们的程序中</p><p><em>app/Models/User.php</em></p><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\</span>Auth<span class="token punctuation">\</span>MustVerifyEmail</span> <span class="token keyword">as</span> MustVerifyEmailTrait<span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token keyword">extends</span> <span class="token class-name">Authenticatable</span> <span class="token keyword">implements</span> <span class="token class-name">MustVerifyEmail</span><span class="token punctuation">{</span>    <span class="token keyword">use</span> <span class="token package">HasApiTokens</span><span class="token punctuation">,</span> HasFactory<span class="token punctuation">,</span> Notifiable<span class="token punctuation">,</span> MustVerifyEmailTrait<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>配置env（同上）</p></li><li><p>强制认证，中间件逻辑</p><p>创建中间件</p><pre class="line-numbers language-php"><code class="language-php">php artisan make<span class="token punctuation">:</span>middleware EnsureEmailIsVerified<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>写入一下内容</p><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\</span>Http<span class="token punctuation">\</span>Middleware</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Closure</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\</span>Http<span class="token punctuation">\</span>Request</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">EnsureEmailIsVerified</span><span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">handle</span><span class="token punctuation">(</span>Request <span class="token variable">$request</span><span class="token punctuation">,</span> Closure <span class="token variable">$next</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 三个判断：</span>        <span class="token comment" spellcheck="true">// 1. 如果用户已经登录</span>        <span class="token comment" spellcheck="true">// 2. 并且还未认证 Email</span>        <span class="token comment" spellcheck="true">// 3. 并且访问的不是 email 验证相关 URL 或者退出的 URL。</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$request</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>            <span class="token operator">!</span> <span class="token variable">$request</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">hasVerifiedEmail</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>            <span class="token operator">!</span> <span class="token variable">$request</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">is</span><span class="token punctuation">(</span><span class="token string">'email/*'</span><span class="token punctuation">,</span> <span class="token string">'logout'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 根据客户端返回对应的内容</span>            <span class="token keyword">return</span> <span class="token variable">$request</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">expectsJson</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token operator">?</span> <span class="token function">abort</span><span class="token punctuation">(</span><span class="token number">403</span><span class="token punctuation">,</span> <span class="token string">'Your email address is not verified.'</span><span class="token punctuation">)</span>                        <span class="token punctuation">:</span> <span class="token function">redirect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string">'verification.notice'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token variable">$next</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注册中间件<em>app/Http/Kernel.php</em>注册的时机确保在 <code>StartSession</code> 后面即可</p><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">protected</span> <span class="token variable">$middlewareGroups</span> <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token string">'web'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">[</span>            \<span class="token package">App<span class="token punctuation">\</span>Http<span class="token punctuation">\</span>Middleware<span class="token punctuation">\</span>EncryptCookies</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token keyword">class</span><span class="token punctuation">,</span>            \<span class="token package">Illuminate<span class="token punctuation">\</span>Cookie<span class="token punctuation">\</span>Middleware<span class="token punctuation">\</span>AddQueuedCookiesToResponse</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token keyword">class</span><span class="token punctuation">,</span>            \<span class="token package">Illuminate<span class="token punctuation">\</span>Session<span class="token punctuation">\</span>Middleware<span class="token punctuation">\</span>StartSession</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token keyword">class</span><span class="token punctuation">,</span>            <span class="token comment" spellcheck="true">// \Illuminate\Session\Middleware\AuthenticateSession::class,</span>            \<span class="token package">Illuminate<span class="token punctuation">\</span>View<span class="token punctuation">\</span>Middleware<span class="token punctuation">\</span>ShareErrorsFromSession</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token keyword">class</span><span class="token punctuation">,</span>            \<span class="token package">App<span class="token punctuation">\</span>Http<span class="token punctuation">\</span>Middleware<span class="token punctuation">\</span>VerifyCsrfToken</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token keyword">class</span><span class="token punctuation">,</span>            \<span class="token package">Illuminate<span class="token punctuation">\</span>Routing<span class="token punctuation">\</span>Middleware<span class="token punctuation">\</span>SubstituteBindings</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token keyword">class</span><span class="token punctuation">,</span>            \<span class="token package">App<span class="token punctuation">\</span>Http<span class="token punctuation">\</span>Middleware<span class="token punctuation">\</span>EnsureEmailIsVerified</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token keyword">class</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">// &lt;&lt;--- 只需添加这一行</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>限额次数可在 app/Http/Controllers/Auth/VerificationController.php 文件中的这一行配置：</p><pre class="line-numbers language-php"><code class="language-php"><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">middleware</span><span class="token punctuation">(</span><span class="token string">'throttle:6,1'</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">only</span><span class="token punctuation">(</span><span class="token string">'verify'</span><span class="token punctuation">,</span> <span class="token string">'resend'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol></li></ul><h2 id="上传图片（限制分辨率，裁剪头像）"><a href="#上传图片（限制分辨率，裁剪头像）" class="headerlink" title="上传图片（限制分辨率，裁剪头像）"></a>上传图片（限制分辨率，裁剪头像）</h2><h3 id="未完继续更新"><a href="#未完继续更新" class="headerlink" title="未完继续更新"></a>未完继续更新</h3><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> laravel </tag>
            
            <tag> 代码块 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel常用扩展</title>
      <link href="/2022/10/10/laravel-chang-yong-kuo-zhan/"/>
      <url>/2022/10/10/laravel-chang-yong-kuo-zhan/</url>
      
        <content type="html"><![CDATA[<h2 id="安装laravel指定版本"><a href="#安装laravel指定版本" class="headerlink" title="安装laravel指定版本"></a>安装laravel指定版本</h2><pre class="line-numbers language-php"><code class="language-php">composer create<span class="token operator">-</span>project laravel<span class="token operator">/</span>laravel laravel<span class="token operator">-</span>shop <span class="token operator">--</span>prefer<span class="token operator">-</span>dist <span class="token string">"8.*"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="中文语言包"><a href="#中文语言包" class="headerlink" title="中文语言包"></a>中文语言包</h2><h2 id="验证码"><a href="#验证码" class="headerlink" title="验证码"></a>验证码</h2><h3 id="未完继续更新"><a href="#未完继续更新" class="headerlink" title="未完继续更新"></a>未完继续更新</h3><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> laravel </tag>
            
            <tag> 插件 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
